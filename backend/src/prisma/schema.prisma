// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password      String
  avatar        String?
  role          String   @default("user")
  verified      Boolean  @default(false)
  emailVisibility Boolean @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relações
  arts          Art[]
  albums        Album[]
  logs          Log[]
}

model Art {
  id          String   @id @default(uuid())
  name        String
  description String?
  imageUrl    String
  isPublic    Boolean  @default(false)
  tags        Json?    // Array de tags
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relações
  creator     User     @relation(fields: [creatorId], references: [id])
  creatorId   String
  album       Album?   @relation(fields: [albumId], references: [id])
  albumId     String?
}

model Album {
  id          String   @id @default(uuid())
  title       String
  description String?
  imageUrl    String?
  isPublic    Boolean  @default(false)
  tags        Json?    // Array de tags
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relações
  creator     User     @relation(fields: [creatorId], references: [id])
  creatorId   String
  arts        Art[]
}

model Log {
  id        String   @id @default(uuid())
  action    String
  details   Json
  createdAt DateTime @default(now())

  // Relações
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}